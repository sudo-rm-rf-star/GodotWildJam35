[gd_scene load_steps=9 format=2]

[ext_resource path="res://things/machine/Machine.tscn" type="PackedScene" id=1]
[ext_resource path="res://things/player/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://things/center/Center.tscn" type="PackedScene" id=3]
[ext_resource path="res://screens/game/T_Random_39.png" type="Texture" id=4]
[ext_resource path="res://screens/game/backdrop.png" type="Texture" id=5]
[ext_resource path="res://things/platform/Platform.tscn" type="PackedScene" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.0, 0.0, 0.0, 1.0);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/octaves = 4
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 0.1
shader_param/shift = -0.2
shader_param/velocity = Vector2( 0.05, 0.05 )
shader_param/fog_color = Color( 0.203922, 0.4, 0.470588, 0.462745 )
shader_param/noise = ExtResource( 4 )

[node name="Node2D2" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.639216 )
position = Vector2( 596.529, -120.816 )
texture = ExtResource( 5 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -4288.96
margin_top = -4530.59
margin_right = 5711.04
margin_bottom = 5469.41
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Center" parent="." instance=ExtResource( 3 )]

[node name="Walls" type="Node2D" parent="."]

[node name="Platform" parent="Walls" instance=ExtResource( 6 )]
position = Vector2( 302.723, 20.1815 )
rotation = 0.691359
start_path = NodePath("Node2D")

[node name="Node2D" type="Node2D" parent="Walls/Platform"]
position = Vector2( -120.67, 152.263 )

[node name="Platform2" parent="Walls" instance=ExtResource( 6 )]
position = Vector2( 592.034, 125.968 )
rotation = 0.0305026
start_path = NodePath("Node2D")

[node name="Node2D" type="Node2D" parent="Walls/Platform2"]
position = Vector2( -116.883, 360.272 )

[node name="Platform3" parent="Walls" instance=ExtResource( 6 )]
position = Vector2( 875.546, 36.1634 )
rotation = -0.630275
start_path = NodePath("Node2D")

[node name="Node2D" type="Node2D" parent="Walls/Platform3"]
position = Vector2( 254.36, 156.42 )

[node name="Machine" parent="." instance=ExtResource( 1 )]
position = Vector2( 600.854, 166.147 )
rotation = 3.17457
influencees_paths = [ NodePath("../Walls/Platform") ]

[node name="Node2D" parent="." instance=ExtResource( 2 )]
position = Vector2( -91.5368, 205.661 )
_center_object = NodePath("../Center")
